#!/usr/bin/env groovy

node {
    
    
    stage("Git Clone"){
    git credentialsId: 'GIT_HUB_CREDENTIALS',url:'https://github.com/berktugsnbck/flask-app.git'
    }

    stage("Kubernetes DEV Deployment"){

        script {
            env.DOCKER_BUILD_NUMBER=Jenkins.instance.getItem("autobuild-dev").lastSuccessfulBuild.number
        }

        sh 'envsubst < ./Kubernetes/dev/deployment.yaml | kubectl apply -f -'
        sh 'kubectl apply -f ./Kubernetes/dev/service.yaml'

      }
      
    environment{
        imageName="flask-app"
        registryCredentials = "NEXUS"
        registry = "masternode.eastus.cloudapp.azure.com:8085"
        
    }  
      
      

    try {
        stages{
            stage("Unit-testing"){
                steps{
                    sh '#!/bin/bash'
                    sh 'pip3 install --user -r requirements.txt'
                    sh 'pip3 test.py'
                    if(catchError(stageResult: 'FAILURE') {
                      stage("PROD Deployment"){ 
                          //nexus bilgileri//
                          sh 'envsubst < ./Kubernetes/prod/deployment.yaml | kubectl apply -f -'
                          sh 'kubectl apply -f ./Kubernetes/prod/service.yaml'
                      }
                } 
                else {
                    
                    stage("TEST Deployment"){

                    def deployment = input(message:'Deploy to TEST ?',ok:'ok',parameters:[booleanParam(defaultValue:true,description:'',name:'Yes')])

                    if(deployment == true){

                    script {
                        env.DOCKER_BUILD_NUMBER=Jenkins.instance.getItem("autobuild").lastSuccessfulBuild.number
                    }

                        sh 'envsubst < ./Kubernetes/test/deployment.yaml | kubectl apply -f -'
                        sh 'kubectl apply -f ./Kubernetes/test/service.yaml'
                      }
                      else{
                          echo "TEST Deployment Aborted!"
                      }
                      
                    stage("PROD Deployment"){
                        //nexus bilgileri//
                        sh 'envsubst < ./Kubernetes/prod/deployment.yaml | kubectl apply -f -'
                        sh 'kubectl apply -f ./Kubernetes/prod/service.yaml'
                    }
                      
                }
            }
        }
    }    
}
